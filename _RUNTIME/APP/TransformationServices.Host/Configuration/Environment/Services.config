<services>
  <!-- Składnia {#IsHttps({... wymaga minimalnie VSF.Base 2.1.76 lub 2.2.8 -->
  <service name="VTS2.Core.Utils.ServiceModel.ServiceContractSeed2" behaviorConfiguration="includeExceptionDetailInFaults">
    <!--VCONFIG behaviorConfiguration={#IsHttps({transformationservice.url.base})?'certificateServiceBehavior':'includeExceptionDetailInFaults'}-->
    <endpoint address="https://localhost/ignore" binding="wsHttpBinding" bindingConfiguration="VServiceHostBinding" contract="VTS2.Core.Utils.ServiceModel.ServiceContractSeed2">
      <!--VCONFIG bindingConfiguration={#IsHttps({transformationservice.url.base})?'VServiceHostBindingSecure':'VServiceHostBinding'}-->
      <!--VCONFIG address = {transformationservice.url.base}-->
    </endpoint>
    <endpoint address="https://localhost/ignore/mex" binding="mexHttpBinding" contract="IMetadataExchange">
      <!--VCONFIG binding = {#IsHttps({transformationservice.url.base})?'mexHttpsBinding':'mexHttpBinding'}-->
      <!--VCONFIG address = {transformationservice.url.base}/mex -->
    </endpoint>
    <endpoint address="https://localhost/ignore" binding="webHttpBinding" bindingConfiguration="webHttp" contract="VTS2.Core.Utils.ServiceModel.ServiceContractSeed2">
      <!--VCONFIG bindingConfiguration={#IsHttps({transformationservice.url.base})?'webHttpEncrypted':'webHttp'}-->
      <!--VCONFIG address = {transformationservice.url.base}/rest -->
    </endpoint>
  </service>
</services>